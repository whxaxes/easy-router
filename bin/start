#! /usr/bin/env node

var fs = require('fs');
var path = require('path');
var opn = require('opn');
var ip = require('ip').address();
var logger = require('../lib/logger');
var Router = require('../');

var port = process.env.PORT || 33750;
var args = process.argv;
var argMaps = {
  help:    ['-h', '--help'],
  version: ['-v', '--version'],
  port:    ['-p', '--port']
};

!function () {
  var nport;

  for (var i = 0; i < args.length; i++) {
    if (argMaps.help.indexOf(args[i]) >= 0) {
      return logger.log(
        '\n\n' +
        'Usage: router <command>\n\n' +
        '   router -h --help             help \n' +
        '   router -v --version          show version \n' +
        '   router -p --port <port>      set server port, default is 33750 \n'
      );
    } else if (argMaps.version.indexOf(args[i]) >= 0) {
      return logger.log(
        'v' + JSON.parse(fs.readFileSync(path.join(__dirname, '../package.json')).toString()).version
      );
    } else if (argMaps.port.indexOf(args[i]) >= 0) {
      nport = /^\d+$/.test(args[i + 1]) ? args[i + 1] : port;

      break;
    }
  }

  var server = Router({
    debug: true,
    maps: {"**/*": "**/*"}
  }).listen(nport || port, function(err) {
    if (err && err.message.indexOf("listen") >= 0) {
      if(nport) {
        logger.log(nport + '端口已被占用, 请更换端口再试');
      } else {
        this.listen(0);
      }
    }
  });

  server.on('listening', function() {
    var port = server.address().port;
    opn('http://' + ip + ':' + port);
  });
}();